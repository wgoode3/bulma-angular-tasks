{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/task-list/task-list.component.css","webpack:///./src/app/task-list/task-list.component.html","webpack:///./src/app/task-list/task-list.component.ts","webpack:///./src/app/task-new/task-new.component.css","webpack:///./src/app/task-new/task-new.component.html","webpack:///./src/app/task-new/task-new.component.ts","webpack:///./src/app/task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <section class=\\\"section main\\\">\\n        <div class=\\\"hero is-primary\\\">\\n            <div class=\\\"hero-body is-bold\\\">\\n                <h1 class=\\\"title\\\">Tasks</h1>\\n            </div>\\n        </div>\\n        <div class=\\\"box\\\">\\n            <app-task-new></app-task-new>\\n            <app-task-list></app-task-list>\\n        </div>\\n    </section>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","// Modules\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n// Components\n\nimport { AppComponent } from './app.component';\nimport { TaskListComponent } from './task-list/task-list.component';\nimport { TaskNewComponent } from './task-new/task-new.component';\n\n// Services\n\nimport { TaskService } from './task.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    TaskNewComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TaskService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\n\nexport class AppModule {\n}","module.exports = \".table-box {\\n    height: 250px;\\n    overflow: hidden;\\n    overflow-y: auto;\\n}\\n\\n.tags {\\n    cursor: pointer;\\n}\\n\\n.is-light {\\n    background-color: #fff !important;\\n}\\n\\n.tag.is-light {\\n    border: 1px solid #ccc;\\n}\"","module.exports = \"<div class=\\\"tabs is-centered is-boxed\\\">\\n    <ul>\\n        <li class=\\\"is-active\\\">\\n            <a (click)=\\\"getAll($event)\\\">All</a>\\n        </li>\\n        <li>\\n            <a (click)=\\\"getComplete($event)\\\">Completed</a>\\n        </li>\\n        <li>\\n            <a (click)=\\\"getActive($event)\\\">Active</a>\\n        </li>\\n    </ul>\\n</div>\\n\\n<div class=\\\"table-box\\\">\\n    <table class=\\\"table is-fullwidth is-hoverable\\\">\\n        <thead>\\n            <tr>\\n                <th style=\\\"width: 50%\\\">Task</th>\\n                <th style=\\\"width: 25%\\\">Status</th>\\n                <th style=\\\"width: 25%\\\">Remove</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let task of tasks\\\">\\n                <td>{{ task.task }}</td>\\n                <td>\\n                    <div class=\\\"tags has-addons\\\" (click)=\\\"changeStatus(task)\\\">\\n                        <span *ngIf=\\\"task.isComplete\\\" class=\\\"tag is-success\\\">\\n                            Completed\\n                        </span>\\n                        <span *ngIf=\\\"task.isComplete\\\" class=\\\"tag is-light\\\">\\n                            <input type=\\\"checkbox\\\" checked />\\n                        </span>\\n                        <span *ngIf=\\\"!task.isComplete\\\" class=\\\"tag is-danger\\\">\\n                            Active\\n                        </span>\\n                        <span *ngIf=\\\"!task.isComplete\\\" class=\\\"tag is-light\\\">\\n                            <input type=\\\"checkbox\\\" />\\n                        </span>\\n                    </div>\\n                </td>\\n                <td>\\n                    <a class=\\\"button is-small is-danger is-outlined\\\" (click)=\\\"remove(task)\\\">\\n                        <span class=\\\"icon is-small\\\">\\n                            <i class=\\\"fas fa-times-circle\\\"></i>\\n                        </span>\\n                        <span>\\n                            Remove\\n                        </span>\\n                    </a>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  constructor(private _taskService: TaskService) { }\n\n  tasks = [];\n  mode = 'all';\n\n  ngOnInit() {\n    this.getAll('');\n  }\n\n  getAll(e){\n    this.setActive(e);\n    this.mode = 'all';\n    this._taskService.getTasks( (data) => {\n      this.tasks = data;\n    });\n  }\n\n  getComplete(e){\n    this.setActive(e);\n    this.mode = 'complete';\n    this._taskService.getTasks( (data) => {\n      this.tasks = [];\n      for(let task of data){\n        if(task.isComplete){\n          this.tasks.push(task);\n        }\n      }\n    });\n  }\n\n  getActive(e){\n    this.setActive(e);\n    this.mode = 'active';\n    this._taskService.getTasks( (data) => {\n      this.tasks = [];\n      for(let task of data){\n        if(!task.isComplete){\n          this.tasks.push(task);\n        }\n      }\n    });\n  }\n\n  remove(task){\n    this._taskService.removeTask(task, () => {\n      if (this.mode == \"all\") {\n        this.getAll('');\n      }else if (this.mode == 'complete') {\n        this.getComplete('');\n      }else if (this.mode == 'active') {\n        this.getActive('');\n      }\n    });\n  }\n\n  changeStatus(task){\n    let update = task;\n    update.isComplete = !task.isComplete;\n    this._taskService.updateTask(task, update, () => {\n      if (this.mode == \"all\") {\n        this.getAll('');\n      }else if (this.mode == 'complete') {\n        this.getComplete('');\n      }else if (this.mode == 'active') {\n        this.getActive('');\n      }\n    });\n  }\n\n  setActive(e){\n    if(e){\n      let siblings = e.target.parentNode.parentNode.children;\n      for(let sibling of siblings){\n        sibling.classList.remove('is-active');\n      }\n      e.target.parentNode.classList.add('is-active');\n    }\n  }\n\n}","module.exports = \"\"","module.exports = \"<form (submit)=\\\"createTask()\\\">\\n    <div class=\\\"column\\\">\\n        <div class=\\\"level\\\">\\n            \\n            <div class=\\\"level-item\\\">\\n                <p class=\\\"subtitle is-4\\\">New Task:</p>\\n            </div>\\n\\n            <div class=\\\"level-item control has-icons-left\\\">\\n                <input type=\\\"text\\\" name=\\\"task.task\\\" [(ngModel)]=\\\"task.task\\\" placeholder=\\\"Your task\\\" class=\\\"input\\\" autoFocus/>\\n                <span class=\\\"icon is-small is-left\\\">\\n                    <i class=\\\"fas fa-briefcase\\\"></i>\\n                </span>\\n            </div>\\n\\n            <div class=\\\"level-item\\\">\\n                <button type=\\\"submit\\\" class=\\\"button is-link is-outlined\\\">\\n                    New Task\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-task-new',\n  templateUrl: './task-new.component.html',\n  styleUrls: ['./task-new.component.css']\n})\nexport class TaskNewComponent implements OnInit {\n\n  task = {'task': '', 'isComplete': false};\n\n  constructor(private _taskService: TaskService) {\n  }\n\n  ngOnInit() {\n  }\n\n  createTask(){\n    this._taskService.addTask(this.task, () => {\n      this.task = {'task': '', 'isComplete': false};\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor() {\n  }\n\n  tasks = [\n    {\n      \"task\": \"Learn Django\",\n      \"isComplete\": true \n    },\n    {\n      \"task\": \"Learn Angular\",\n      \"isComplete\": true \n    },\n    {\n      \"task\": \"???\",\n      \"isComplete\": false \n    },\n    {\n      \"task\": \"Profit!\",\n      \"isComplete\": false \n    }\n  ];\n\n  getTasks(cb){\n    return cb(this.tasks);\n  }\n\n  addTask(task, cb){\n    this.tasks.push(task);\n    cb();\n  }\n\n  removeTask(task, cb){\n    for(let i=0; i<this.tasks.length; i++){\n      if(this.tasks[i] == task){\n        this.tasks.splice(i, 1);\n        break;\n      }\n    }\n    cb();\n  }\n\n  updateTask(task, update, cb){\n    for(let i=0; i<this.tasks.length; i++){\n      if(this.tasks[i] == task){\n        this.tasks[i] = update;\n        break;\n      }\n    }\n    cb();\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}